name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  backend:
    name: Backend Pipeline
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'backend') || contains(github.event.pull_request.head.ref, 'backend')
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: pnpm/action-setup@v4
      with:
        version: 9

    # This enables task distribution via Nx Cloud
    # Run this command as early as possible, before dependencies are installed
    # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
    - run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

    # Cache node_modules
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'

    - name: Install Dependencies
      run: pnpm install

    - name: Lint, Test, and Build Backend
      run: |
        pnpm exec nx affected --target=lint --tag=backend --skip-nx-cache --verbose
        pnpm exec nx affected --target=test --tag=backend  --skip-nx-cache --verbose
        pnpm exec nx affected --target=build --tag=backend  --skip-nx-cache --verbose
  
  frontend:
    name: Frontend Pipeline
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'frontend') || contains(github.event.pull_request.head.ref, 'frontend')
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: pnpm/action-setup@v4
      with:
        version: 9

    # This enables task distribution via Nx Cloud
    # Run this command as early as possible, before dependencies are installed
    # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
    - run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

    # Cache node_modules
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'

    - name: Install Dependencies
      run: pnpm install --frozen-lockfile

    - name: Lint, Test, and Build Frontend
      run: pnpm exec nx affected -t lint test build --tag=frontend

#  main:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - uses: pnpm/action-setup@v4
#         with:
#           version: 9

#       # This enables task distribution via Nx Cloud
#       # Run this command as early as possible, before dependencies are installed
#       # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
#       - run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

#       # Cache node_modules
#       - uses: actions/setup-node@v4
#         with:
#           node-version: 20
#           cache: 'pnpm'

#       - run: pnpm install --frozen-lockfile
#       - uses: nrwl/nx-set-shas@v4

#       # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
#       # - run: pnpm exec nx-cloud record -- echo Hello World
#       # - run: pnpm exec nx-cloud record -- nx format:check --base=$NX_BASE --head=$NX_HEAD
#       # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
#       - run: pnpm exec nx affected -t lint test build --skip-nx-cache